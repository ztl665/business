<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bussiness.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.bussiness.pojo.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.bussiness.pojo.User" useGeneratedKeys="true" >
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into neuedu_user(username, password,
        email, phone, question,
        answer, role, create_time,
        update_time, ip)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
        #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
        now(), #{ip,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.bussiness.pojo.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update neuedu_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time, ip
    from neuedu_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time, ip
    from neuedu_user
  </select>




  <select id="isexistusername"  parameterType="string" resultType="int">
    select count(username)
    from neuedu_user where username=#{username}
  </select>


  <select id="isexistemail"  parameterType="string" resultType="int">
    select count(email)
    from neuedu_user where email=#{email}
  </select>


  <select id="findUserByUsernameAndPassword" parameterType="map" resultMap="BaseResultMap">
    select id,username,email, phone, question, answer, role, create_time,update_time, ip
    from neuedu_user
    where username=#{username} and password=#{password}
  </select>

  <select id="forget_get_question" parameterType="string" resultType="string">
   select question from neuedu_user where username=#{username}
  </select>

  <select id="forget_check_answer" parameterType="map" resultType="int">
   select count(id) from neuedu_user
   where username=#{username} and question=#{question} and answer=#{answer}
  </select>

    <update id="forget_reset_password" parameterType="map">

        update neuedu_user
        set
        password = #{password,jdbcType=VARCHAR},
        update_time = now()
        where username=#{username}
    </update>

    <update id="updateUserByActive" parameterType="com.bussiness.pojo.User">
        update neuedu_user
        <set>
            <if test="user.email!=null">
                email=#{user.email},
            </if>
            <if test="user.phone!=null">
                phone=#{user.phone},
            </if>
            <if test="user.question!=null">
                question=#{user.question},
            </if>
            <if test="user.answer!=null">
                answer=#{user.answer},
            </if>
            update_time=now()
        </set>
            <where>
                id=#{user.id}
            </where>

    </update>

    <update id="reset_password" parameterType="map">
        update neuedu_user
        set
        password = #{newpassword},
        update_time = now()
        where username=#{username}
    </update>


</mapper>